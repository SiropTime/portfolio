{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a portfolio API server. There are endpoints for creating, updating, deleting, getting portfolios and making swaps and quotes with them.",
        "title": "Portfolio API",
        "contact": {
            "name": "API developer",
            "url": "https://t.me/KlenoviySIr",
            "email": "KlenoviySir@yandex.ru"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/portfolios",
    "paths": {
        "/": {
            "get": {
                "description": "Getting the status of server",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Checking if server is alive",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/portfolio": {
            "get": {
                "description": "Get all portfolios in DB with their tokens with amount",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Get all portfolios in DB",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/portfolios.ResponsePortfolio"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create new portfolio with tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Create new portfolio",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Portfolio id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Portfolio",
                        "name": "portfolio",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/portfolios.InputPortfolio"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/portfolios.ProportionsResponsePortfolio"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/portfolio/{id}": {
            "get": {
                "description": "Get portfolio by id with amount of tokens",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Get portfolio by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Portfolio id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portfolios.ResponsePortfolio"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Update whole portfolio by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Update portfolio",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Portfolio id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Portfolio",
                        "name": "portfolio",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/portfolios.InputPortfolio"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/portfolios.ProportionsResponsePortfolio"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Delete portfolio with its tokens by id",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Delete portfolio by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Portfolio id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/portfolio/{id}/count": {
            "get": {
                "description": "Get portfolio with pre-calculated tokens values for transaction and gas by portfolio id and token with amount from which will transaction be made",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Get portfolio after quote",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Portfolio id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Amount of token",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contract address of token",
                        "name": "contractAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gas price for transaction to count estimated gas of this chain",
                        "name": "gasPrice",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portfolios.AfterQuotePortfolio"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/portfolio/{id}/proportions": {
            "get": {
                "description": "Get portfolio with tokens represented with proportions by id",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Get portfolio proportions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Portfolio id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portfolios.ProportionsResponsePortfolio"
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/portfolio/{id}/tokens": {
            "patch": {
                "description": "Add new tokens to portfolio by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Add new tokens to portfolio",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Portfolio id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tokens",
                        "name": "tokens",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/token.InputTokens"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/portfolios.ProportionsResponsePortfolio"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/portfolio/{id}/transactions": {
            "get": {
                "description": "Get transactions data for metamask for current portfolio with amount of token and wallet address",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "portfolio"
                ],
                "summary": "Get transactions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Portfolio id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Amount of token",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Contract address of token",
                        "name": "fromTokenAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User's wallet address",
                        "name": "fromAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Slippage for transaction",
                        "name": "slippage",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portfolios.AfterSwapPortfolio"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "portfolios.AfterQuotePortfolio": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/token.QuoteToken"
                    }
                }
            }
        },
        "portfolios.AfterSwapPortfolio": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/token.SwapWrapperForToken"
                    }
                }
            }
        },
        "portfolios.InputPortfolio": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/token.InputToken"
                    }
                }
            }
        },
        "portfolios.ProportionsResponsePortfolio": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tokensProportions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/token.ProportionsToken"
                    }
                }
            }
        },
        "portfolios.ResponsePortfolio": {
            "type": "object",
            "properties": {
                "chain_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/token.PortfoliosToken"
                    }
                }
            }
        },
        "token.AfterSwapToken": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "gas": {
                    "type": "integer"
                },
                "gasPrice": {
                    "type": "string"
                },
                "to": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "token.InputToken": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                }
            }
        },
        "token.InputTokens": {
            "type": "object",
            "properties": {
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/token.InputToken"
                    }
                }
            }
        },
        "token.PortfoliosToken": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "decimals": {
                    "type": "integer"
                },
                "ticker": {
                    "type": "string"
                }
            }
        },
        "token.ProportionsToken": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "proportion": {
                    "type": "number"
                },
                "ticker": {
                    "type": "string"
                }
            }
        },
        "token.QuoteToken": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "estimated_gas": {
                    "type": "integer"
                },
                "final_price": {
                    "type": "string"
                },
                "native_price": {
                    "type": "string"
                },
                "ticker": {
                    "type": "string"
                }
            }
        },
        "token.SwapWrapperForToken": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "ticker": {
                    "type": "string"
                },
                "tx": {
                    "$ref": "#/definitions/token.AfterSwapToken"
                }
            }
        }
    }
}